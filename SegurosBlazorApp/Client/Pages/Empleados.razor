@page "/empleados"
@using SegurosBlazorApp.Shared.Models
@inject HttpClient Http

<PageTitle>Empleados</PageTitle>

<h1>Empleados</h1>

<p>Empleados de la empresa</p>

<div>
    <div class="row">
        <div class="col col-md-1">
            <div class="row"><label>Nombre:</label></div>
        </div>
        <div class="col col-md-2">
            <div class="row"><input type="text" @bind-value="@nombres" /></div>
        </div>
        <div class="col col-md-1" />
        <div class="col col-md-1">
            <div class="row"><label>Apellidos:</label></div>
        </div>
        <div class="col col-md-2">
            <div class="row"><input type="text" @bind-value="@apellidos" /></div>
        </div>
        <div class="col col-md-5" />
    </div>
    <div class="row">
        <div class="col col-md-1">
            <div class="row"><label>Nacimiento:</label></div>
        </div>
        <div class="col col-md-2">
            <div class="row"><input type="date" @bind-value="@fechaNacimiento" /></div>
        </div>
        <div class="col col-md-1" />
        <div class="col col-md-1">
            <div class="row"><label>CURP:</label></div>
        </div>
        <div class="col col-md-2">
            <div class="row"><input type="text" @bind-value="@CURP" /></div>
        </div>
        <div class="col col-md-5" />
    </div>
    <div class="row">
        <div class="col col-md-1">
            <div class="row"><label>SSN:</label></div>
        </div>
        <div class="col col-md-2">
            <div class="row"><input type="text" @bind-value="@SSN" /></div>
        </div>
        <div class="col col-md-1" />
        <div class="col col-md-1">
            <div class="row"><label>Teléfono:</label></div>
        </div>
        <div class="col col-md-2">
            <div class="row"><input @bind=telefono /></div>
        </div>
        <div class="col col-md-5" />
    </div>
    <div class="row">
        <div class="col col-md-1">
            <div class="row"><label>Nacionalidad:</label></div>
        </div>
        <div class="col col-md-2">
            <div class="row"><input type="text" @bind-value="@nacionalidad" /></div>
        </div>
        <div class="col col-md-1" />
        <div class="col col-md-1">
            <div class="row"><label>Numero Empleado:</label></div>
        </div>
        <div class="col col-md-2">
            <div class="row"><input type="text" @bind-value="@numeroEmpleado" /></div>
        </div>
        <div class="col col-md-5" />
    </div>
    <div class="row">
        <button class="btn btn-primary col-md-3" @onclick="GuardarEmpleado">Guardar</button>
    </div>
</div>

<br />


@if (empleados == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Numero Empleado</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Nacimiento</th>
                <th>CURP</th>
                <th>SSN</th>
                <th>Telefono</th>
                <th>Nacionalidad</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var empleado in empleados)
            {
                <tr>
                    <td>@empleado.EmpleadoId</td>
                    <td>@empleado.NumeroEmpleado</td>
                    <td>@empleado.Persona.Nombre</td>
                    <td>@empleado.Persona.Apellidos</td>
                    <td>@empleado.Persona.FechaNacimiento</td>
                    <td>@empleado.Persona.CURP</td>
                    <td>@empleado.Persona.SSN</td>
                    <td>@empleado.Persona.Telefono</td>
                    <td>@empleado.Persona.Nacionalidad</td>
                    <td><button class="btn btn-primary" id=@empleado.EmpleadoId @onclick="()=>BorrarEmpleado(empleado.EmpleadoId)">Borrar</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Empleado[]? empleados;
    private string nombres;
    private string apellidos = string.Empty;
    private DateTime fechaNacimiento = Convert.ToDateTime("1990-01-01");
    private string CURP = string.Empty;
    private string SSN = string.Empty;
    string telefono { get; set; }
    private string nacionalidad = string.Empty;
    private string numeroEmpleado = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        empleados = await Http.GetFromJsonAsync<Empleado[]>("api/Empleado");
    }

    private async void BorrarEmpleado(int id)
    {
        HttpResponseMessage message = await Http.DeleteAsync("api/Empleado/"+id.ToString());
        empleados = await Http.GetFromJsonAsync<Empleado[]>("api/Empleado");
        StateHasChanged();
    }

    private async void GuardarEmpleado()
    {
        Empleado empleado = new Empleado();
        empleado.EmpleadoId = 0;
        empleado.NumeroEmpleado = numeroEmpleado;
        empleado.PersonaId = 0;
        empleado.Persona = new Persona();
        empleado.Persona.Nombre = nombres;
        empleado.Persona.Apellidos = apellidos;
        empleado.Persona.CURP = CURP;
        empleado.Persona.FechaNacimiento = Convert.ToDateTime(fechaNacimiento);
        empleado.Persona.Nacionalidad = nacionalidad;
        empleado.Persona.PersonaId = 0;
        empleado.Persona.SSN = SSN;
        empleado.Persona.Telefono= telefono;




        HttpResponseMessage message = await Http.PostAsJsonAsync("api/Empleado", empleado);
        empleados = await Http.GetFromJsonAsync<Empleado[]>("api/Empleado");
        StateHasChanged();
    }

}
